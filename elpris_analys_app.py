import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

st.set_page_config(page_title="Elprisanalys", layout="wide")

st.title("üîå Elprisanalys med Solproduktion")

# V√§lj eln√§tsbolag
n√§tbolag = st.selectbox("V√§lj eln√§tsbolag", ["Fortum", "Ellevio"])

# S√§tt fast avgift beroende p√• val
if n√§tbolag == "Fortum":
    fast_avgift = 15  # √∂re/kWh
else:
    fast_avgift = 25  # √∂re/kWh

# Simulerade data
timmar = list(range(24))
spotpris = np.random.uniform(30, 80, size=24)
f√∂rbrukning = np.random.uniform(0.5, 2.0, size=24)
solproduktion = [0]*6 + list(np.random.uniform(0.2, 1.5, size=10)) + [0]*8

# Kostnadsber√§kning
# Konvertera alla listor till float arrays f√∂r att undvika datatypfel
spotpris = np.array(spotpris, dtype=float)
f√∂rbrukning = np.array(f√∂rbrukning, dtype=float)
solproduktion = np.array(solproduktion, dtype=float)

# Kostnadsber√§kning
kostnad_per_timme = ((spotpris + fast_avgift) * f√∂rbrukning) - (solproduktion * 80)


# Kontrollera att alla listor har samma l√§ngd
if len(spotpris) == len(f√∂rbrukning) == len(solproduktion) == len(timmar):
    df = pd.DataFrame({
        "Timme": timmar,
        "Spotpris (√∂re/kWh)": spotpris,
        "F√∂rbrukning (kWh)": f√∂rbrukning,
        "Solproduktion (kWh)": solproduktion,
        "Ber√§knad kostnad (√∂re)": kostnad_per_timme
    })
else:
    st.error("L√§ngderna p√• listorna matchar inte!")
    df = pd.DataFrame()

# Layout
col1, col2 = st.columns(2)

with col1:
    st.subheader("üìä Elpris & F√∂rbrukning")
    fig, ax1 = plt.subplots()
    ax2 = ax1.twinx()
    ax1.plot(df["Timme"], df["Spotpris (√∂re/kWh)"], 'g-', label="Spotpris")
    ax2.plot(df["Timme"], df["F√∂rbrukning (kWh)"], 'b--', label="F√∂rbrukning")
    ax1.set_xlabel("Timme")
    ax1.set_ylabel("Spotpris (√∂re/kWh)", color='g')
    ax2.set_ylabel("F√∂rbrukning (kWh)", color='b')
    st.pyplot(fig)

with col2:
    st.subheader("‚òÄÔ∏è Solproduktion och kostnad")
    fig2, ax3 = plt.subplots()
    ax4 = ax3.twinx()
    ax3.bar(df["Timme"], df["Solproduktion (kWh)"], color='orange', label="Solproduktion")
    ax4.plot(df["Timme"], df["Ber√§knad kostnad (√∂re)"], 'r-', label="Kostnad")
    ax3.set_xlabel("Timme")
    ax3.set_ylabel("Solproduktion (kWh)", color='orange')
    ax4.set_ylabel("Ber√§knad kostnad (√∂re)", color='r')
    st.pyplot(fig2)

# Visar data
st.subheader("üìÑ Data√∂versikt")
st.dataframe(df.style.format({
    "Spotpris (√∂re/kWh)": "{:.0f}",
    "F√∂rbrukning (kWh)": "{:.2f}",
    "Solproduktion (kWh)": "{:.1f}",
    "Ber√§knad kostnad (√∂re)": "{:.0f}"
}))

# Effektavgiftssimulering
effektavgift = max(f√∂rbrukning) * 20  # Exempelv√§rde f√∂r simulering

st.markdown("---")
st.markdown(f"üí° **Simulerad effektavgift:** {effektavgift:.2f} kr (baserat p√• maxf√∂rbrukning)")
st.caption("Denna simulering √§r endast f√∂r utbildnings- och planeringssyfte. Spotpriser varierar varje dag.")
